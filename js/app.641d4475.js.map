{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assets/fonts/Lobster/Lobster-Regular.ttf","webpack:///./src/App.vue","webpack:///./src/components/Game.vue","webpack:///./src/helpers/gameState.js","webpack:///./src/components/Game.vue?374d","webpack:///./src/App.vue?dfb6","webpack:///./src/main.js","webpack:///./src/assets/sounds/boo.wav","webpack:///./src/assets/sounds/clap.wav","webpack:///./src/assets/sounds/error.wav","webpack:///./src/assets/sounds/pop.wav","webpack:///./src/App.vue?0995"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","id","height","width","gameCanvasClick","displayState","controls","startEasyGame","startMediumGame","startHardGame","fullCircle","Math","PI","initialiseGameState","centre","sounds","circles","dataNumbers","currentLevel","circleRadius","innerCircleRadius","initACircle","dataNumber","calcNumber","isDisplayed","path","popStartTime","popEndTime","hasBeenPlayed","getCirclesToDraw","gameIsWon","gameHasEnded","gameWasWon","gameIsLost","hasFinishedLastLevel","levelIsWon","filter","getCurrentTargetText","getHitCircle","theContext","x","y","find","isPointInPath","isPieceSelected","p_Piece","isMovingIn","MAX_TARGET_EASY","MAX_TARGET_MEDIUM","MAX_TARGET_HARD","difficultyMax","forDifficulty","easy","medium","hard","currentDifficulty","LEVELS_PER_GAME","initialiseGame","difficulty","toLowerCase","maxForDifficulty","level","levelTarget","round","random","initialiseNewLevel","NUMBER_OF_PAIRS","p_IsFirstLevel","targetNumber","currentPair","firstNumber","shuffleCircles","gameEndTime","addSeconds","Date","difficultySecondsPerLevel","SECONDS_PER_LEVEL_EASY","SECONDS_PER_LEVEL_MEDIUM","SECONDS_PER_LEVEL_HARD","newCircles","index","indexToRemove","p_Now","p_SecondsToAdd","newDate","setSeconds","getSeconds","onGameClick","clickedCircle","onCircleClicked","startPopping","SECONDS_PER_POP","startMovingIn","moveInStartTime","moveInEndTime","SECONDS_PER_SELECT","startMovingOut","isMovingOut","moveOutStartTime","moveOutEndTime","canPlay","selections","some","currentTurnIndex","doPlay","SELECTIONS_PER_TURN","prepareForNextPlay","hitCircle","getPieceRadiusProgressFactor","SECONDS_PER_SPIN","getPieceCentre","p_Index","thePiece","progressFactor","positionRadius","partCircle","circleX","sin","circleY","cos","DOMPointReadOnly","getPieceSize","baseRadius","updatePiecePath","p_Centre","radius","Path2D","arc","SECONDS_PER_SUCCESS_EASY","SECONDS_PER_SUCCESS_MEDIUM","SECONDS_PER_SUCCESS_HARD","difficultySecondsPerSuccess","SECONDS_PER_ERROR_EASY","SECONDS_PER_ERROR_MEDIUM","SECONDS_PER_ERROR_HARD","difficultySecondsPerError","onTurnFinished","p_Selection","selectedTotal","reduce","v","forEach","Promise","resolve","setTimeout","then","pop","play","error","checkForTurnWon","every","checkAllForTurnWon","endGame","p_HasWon","clap","boo","onGameTick","gameIsOver","getPieceAlpha","getCountdownSeconds","setup","soundPop","Audio","soundClap","soundError","soundBoo","gameState","initialise","font","FontFace","load","document","fonts","add","theCanvas","getElementById","getContext","startGame","requestAnimationFrame","drawCircles","drawText","p_Context","p_ToShow","p_Position","p_Colour","p_Font","fillStyle","textSize","measureText","fillText","actualBoundingBoxAscent","actualBoundingBoxDescent","timeNow","clearRect","circleAlpha","pieceCentre","fill","console","e","offsetX","offsetY","render","components","Game","createApp","App","mount"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,IAAO,GAGJK,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU6B,QAGnC,IAAIC,EAASF,EAAiB5B,GAAY,CACzCK,EAAGL,EACH+B,GAAG,EACHF,QAAS,IAUV,OANAf,EAAQd,GAAUW,KAAKmB,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG/DI,EAAOC,GAAI,EAGJD,EAAOD,QAKfH,EAAoBM,EAAIlB,EAGxBY,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,SAASL,EAASM,EAAMC,GAC3CV,EAAoBW,EAAER,EAASM,IAClC3B,OAAO8B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEV,EAAoBe,EAAI,SAASZ,GACX,qBAAXa,QAA0BA,OAAOC,aAC1CnC,OAAO8B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DpC,OAAO8B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKxC,OAAOyC,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBxC,OAAO8B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBQ,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAJ,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASgB,EAAQC,GAAY,OAAO9C,OAAOC,UAAUC,eAAeC,KAAK0C,EAAQC,IAGzG5B,EAAoB6B,EAAI,yBAExB,IAAIC,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAW3C,KAAKsC,KAAKK,GAC5CA,EAAW3C,KAAOf,EAClB0D,EAAaA,EAAWG,QACxB,IAAI,IAAItD,EAAI,EAAGA,EAAImD,EAAWjD,OAAQF,IAAKP,EAAqB0D,EAAWnD,IAC3E,IAAIU,EAAsB2C,EAI1BzC,EAAgBJ,KAAK,CAAC,EAAE,kBAEjBM,K,gECvJTW,EAAOD,QAAU,IAA0B,sC,gLCCzC,eAAQ,G,gBCON,eAAoB,UAAhB,eAAW,G,4EAPjB,eAKU,UAJR+B,GAAG,aACHC,OAAO,MACPC,MAAM,MACL,QAAK,8BAAE,EAAAC,iBAAA,EAAAA,gBAAA,uBAEC,EAAAC,aAAaC,U,iBAAxB,eAKM,SAJJ,EACA,eAAuD,YAAlD,eAA4C,UAAnC,QAAK,8BAAE,EAAAC,eAAA,EAAAA,cAAA,sBAAe,UACpC,eAA2D,YAAtD,eAAgD,UAAvC,QAAK,8BAAE,EAAAC,iBAAA,EAAAA,gBAAA,sBAAiB,YACtC,eAAuD,YAAlD,eAA4C,UAAnC,QAAK,8BAAE,EAAAC,eAAA,EAAAA,cAAA,sBAAe,a,mFCXlCC,G,sEAAa,EAAIC,KAAKC,IAKrB,SAASC,EAAoBC,EAAQC,GAuB1C,IAAIC,EAEAC,EACAC,EAAe,EACbC,EAAe,IACfC,EAAoBD,EAAe,EAMnCE,EAAc,SAACC,GAAD,MAAiB,CACnClF,KAAM,CACJmF,WAAYD,GAEdE,aAAa,EACbC,KAAM,KACNC,aAAc,KACdC,WAAY,KACZC,eAAe,IAMXC,EAAmB,kBAAMb,GAK/B,SAASc,IACP,OAAOC,IAAgBC,GAMzB,SAASC,IACP,OAAOF,KAAiBC,GAM1B,SAASE,IACP,OAAOhB,IAAiBD,EAAYrE,OAMtC,IAAMuF,EAAa,kBAAsD,IAAhDnB,EAAQoB,QAAO,SAAC9D,GAAD,OAAOA,EAAEkD,eAAa5E,QAKxDyF,EAAuB,2BAASpB,EAAYC,KAQ5CoB,EAAe,SAACC,EAAYC,EAAGC,GAAhB,OACnBzB,EACGoB,QAAO,SAAC9D,GAAD,OAAOA,EAAEkD,eAChBkB,MAAK,SAACpE,GAAD,OAAOiE,EAAWI,cAAcrE,EAAEmD,KAAMe,EAAGC,OAK/CG,EAAkB,SAACC,GAAD,OAAaA,EAAQC,YAEvCC,EAAkB,EAClBC,EAAoB,GACpBC,EAAkB,IAIxB,SAASC,IACP,OAAOC,EAAcJ,EAAiBC,EAAmBC,GAG3D,SAASE,EAAcC,EAAMC,EAAQC,GACnC,OAAQC,GACN,IAAK,OACH,OAAOH,EACT,IAAK,SACH,OAAOC,EACT,QACE,OAAOC,GAIb,IAEIC,EAFEC,EAAkB,EAMxB,SAASC,EAAeC,GACtBH,EAAoBG,EAAWC,cAC/B1C,EAAc,GAEd,IADA,IAAM2C,EAAmBV,EAAcQ,GAC9BG,EAAQ,EAAGA,EAAQL,EAAiBK,IAAS,CACpD,IAAMC,EAAcnD,KAAKoD,MAAMpD,KAAKqD,SAAWJ,GAC/C3C,EAAY/D,KAAK4G,GAEnB5C,EAAe,EACfa,IAAe,EACfkC,GAAmB,GAGrB,IAAMC,EAAkB,EAIxB,SAASD,EAAmBE,GAC1B,IAAMC,EAAenD,EAAYC,GAC7BmD,EAAc,EAClBrD,EAAU,GACV,MAAOqD,EAAcH,EAAiB,CACpC,IAAMI,EAAc3D,KAAKoD,MAAMpD,KAAKqD,SAAWI,GAC/CpD,EAAQ9D,KAAKmE,EAAYiD,IACzBtD,EAAQ9D,KAAKmE,EAAY+C,EAAeE,IACxCD,IAEFE,IACAC,GAAcC,EACZN,EAAiB,IAAIO,KAASF,GAC9BG,KAIJ,IAAMC,EAAyB,GACzBC,EAA2B,GAC3BC,EAAyB,GAI/B,SAASH,IACP,OAAOxB,EACLyB,EACAC,EACAC,GAIJ,SAASP,IAEP,IADA,IAAMQ,EAAa,GACVC,EAAQhE,EAAQpE,OAAS,EAAGoI,GAAS,EAAGA,IAAS,CACxD,IAAMC,EAAgBtE,KAAKoD,MAAMpD,KAAKqD,WAAahD,EAAQpE,OAAS,GACpEmI,EAAW7H,KAAK8D,EAAQiE,IACxBjE,EAAQlD,OAAOmH,EAAe,GAEhCjE,EAAU+D,EAQZ,SAASN,EAAWS,EAAOC,GACzB,IAAMC,EAAU,IAAIV,KAAKQ,GAEzB,OADAE,EAAQC,WAAWD,EAAQE,aAAeH,GACnCC,EAQT,SAASG,EAAYhD,EAAYC,EAAGC,GAClC,IAAM+C,EAAgBlD,EAAaC,EAAYC,EAAGC,GAC9C+C,GACFC,EAAgBD,GAQpB,SAASE,EAAa7C,EAASqC,GAC7BrC,EAAQnB,aAAewD,EACvBrC,EAAQlB,WAAa8C,EAAWS,EAAOS,GAOzC,SAASC,EAAc/C,EAASqC,GAC9BrC,EAAQC,YAAa,EACrBD,EAAQgD,gBAAkBX,EAC1BrC,EAAQiD,cAAgBrB,EAAWS,EAAOa,GAO5C,SAASC,EAAenD,EAASqC,GAC/BrC,EAAQC,aAAeD,EAAQoD,aAAc,GAC7CpD,EAAQqD,iBAAmBhB,EAC3BrC,EAAQsD,eAAiB1B,EAAWS,EAAOa,GAM7C,SAASK,EAAQvD,GAEf,OAAQwD,EAAWC,MAAK,SAACtI,GAAD,OAAOA,EAAEsI,MAAK,SAAC1G,GAAD,OAAOA,IAAMiD,QAGrD,IAAI0D,EAAmB,EAIvB,SAASC,EAAO3D,GACdwD,EAAWE,GAAkBrJ,KAAK2F,GAClC+C,EAAc/C,EAAS,IAAI6B,MAG7B,IAAM+B,EAAsB,EAC5B,SAASC,IACHL,EAAWE,GAAkB3J,QAAU6J,IACzCF,GAAoBA,EAAmB,GAAKrC,GAKhD,IAAMmC,EAAa,CAAC,GAAI,GAAI,GAAI,IAIhC,SAASZ,EAAgBkB,GACnBP,EAAQO,KACVH,EAAOG,GACPD,KAIJ,IAAMX,EAAqB,EAK3B,SAASa,EAA6B/D,EAASqC,GAC7C,OAAIrC,EAAQC,WACHD,EAAQiD,cAAgBZ,EAC3B,GACCrC,EAAQiD,cAAgBZ,IAA+B,IAArBa,GAC9BlD,EAAQoD,YACVf,EAAQrC,EAAQsD,eACnB,GACCjB,EAAQrC,EAAQqD,mBAA0C,IAArBH,GAEnC,EAIX,IAAMc,EAAmB,GAMzB,SAASC,EAAeC,EAAS7B,GAC/B,IAAM8B,EAAWhG,EAAQ+F,GACnBE,EAAiBL,EAA6BI,EAAU9B,GACxDgC,EACJ9F,GAAqBD,EAAeC,GAAqB6F,EACrDE,EACJzG,IAEEqG,EAAU,GAAK/F,EAAQpE,OAEvBsI,GAA4B,IAAnB2B,IACPO,EAAUtG,EAAO0B,EAAI0E,EAAiBvG,KAAK0G,IAAIF,GAC/CG,EAAUxG,EAAO2B,EAAIyE,EAAiBvG,KAAK4G,IAAIJ,GACrD,OAAO,IAAIK,iBAAiBJ,EAASE,GAGvC,IAAM3B,EAAkB,EAKxB,SAAS8B,EAAa5E,EAASqC,GAC7B,IAAMwC,EAAa,GACnB,OAA6B,OAAzB7E,EAAQnB,aACHgG,EAKLA,GACC,EACC/G,KAAK0G,KAEDnC,EAAQrC,EAAQnB,eAAmC,IAAlBiE,IAEhC,IAAMhF,KAAKC,IAEZD,KAAKC,KAWjB,SAAS+G,EAAgB9E,EAAS+E,EAAU1C,GAC1C,IAAM2C,EAASJ,EAAa5E,EAASqC,GAC/BzD,EAAO,IAAIqG,OAGjB,OADArG,EAAKsG,IAAIH,EAASpF,EAAGoF,EAASnF,EAAGoF,EAAQ,EAAGnH,GACpCmC,EAAQpB,KAAOA,EAGzB,IAAMuG,EAA2B,EAC3BC,EAA6B,EAC7BC,EAA2B,EAIjC,SAASC,KACP,OAAOhF,EACL6E,EACAC,EACAC,GAIJ,IAsEInG,GAEAC,GAyCAwC,GAjHE4D,GAAyB,EACzBC,GAA2B,EAC3BC,GAAyB,EAI/B,SAASC,KACP,OAAOpF,EACLiF,GACAC,GACAC,IAQJ,SAASE,GAAeC,EAAavD,GACnC,IAAMwD,EAAgBD,EAAYE,QAChC,SAACC,EAAGtK,GAAJ,OAAUsK,EAAItK,EAAElC,KAAKmF,aACrB,GAEEmH,IAAkBzH,EAAYC,IAChCuH,EAAYI,SAAQ,SAACjJ,GAAD,OAAO8F,EAAa9F,EAAGsF,MAC3C,IAAI4D,SAAQ,SAACC,GAAD,OACVC,WAAWD,EAA4B,IAAlBpD,EAA0B,MAC/CsD,MAAK,kBAAMlI,EAAOmI,IAAIC,UACxB3E,GAAcC,EAAWD,GAAa2D,QAEtCM,EAAYI,SAAQ,SAACjJ,GAAD,OAAOoG,EAAepG,EAAGsF,MAC7CnE,EAAOqI,MAAMD,OAEb3E,GAAcC,EAAWD,IAAc+D,OAEzCE,EAAY7L,OAAS,EAOvB,SAASyM,GAAgBZ,EAAavD,GAEhCuD,EAAY7L,SAAW6J,GAErBgC,EAAYa,OAAM,SAAC1J,GAAD,OAAOA,EAAEkG,cAAgBZ,MAC7CsD,GAAeC,EAAavD,GAQlC,SAASqE,GAAmBrE,GAC1BmB,EAAWwC,SAAQ,SAAC7K,GAAD,OAAOqL,GAAgBrL,EAAGkH,MAG/C,SAASsE,GAAQC,GACXA,EACF1I,EAAO2I,KAAKP,OAEZpI,EAAO4I,IAAIR,OAEbpH,IAAe,EACfC,GAAayH,EAUf,SAASG,GAAW1E,GACbnD,KACHwH,GAAmBrE,GACf/C,KACFjB,IACIgB,KACFnB,EAAO2I,KAAKP,OACZK,IAAQ,IAERvF,GAAmB,IAEZ4F,GAAW3E,IACpBsE,IAAQ,GAEVxI,EAAQ6H,SAAQ,SAACvK,GACQ,OAAnBA,EAAEoD,eACJpD,EAAEkD,YAAc0D,EAAQ5G,EAAEqD,gBAUlC,SAASmI,GAAcjH,EAASqC,GAC9B,OAA6B,OAAzBrC,EAAQnB,cAEFwD,EAAQrC,EAAQnB,eAAmC,IAAlBiE,GAGlC,EASX,SAASoE,GAAoB7E,GAC3B,OAAOvE,KAAKoD,OAAOS,GAAcU,GAAS,KAM5C,SAAS2E,GAAW3E,GAClB,OAAOA,EAAQV,GAGjB,MAAO,CACLf,iBACAQ,qBACApC,mBACAC,YACAG,aACAsD,cACAlD,uBACAO,kBACAkE,iBACAa,kBACAiC,cACAE,iBACAC,wBDleW,OACbvL,KAAM,OACNwL,MAFa,WAIX,IAAIzH,EACEzB,EAAS,IAAI0G,iBAAiB,IAAK,KACnCyC,EAAW,IAAIC,MAAM,EAAQ,SAC7BC,EAAY,IAAID,MAAM,EAAQ,SAC9BE,EAAa,IAAIF,MAAM,EAAQ,SAC/BG,EAAW,IAAIH,MAAM,EAAQ,SAC7BI,EAAYzJ,EAAoBC,EAAQ,CAC5CoI,IAAKe,EACLP,KAAMS,EACNf,MAAOgB,EACPT,IAAKU,IAZD,SAiBSE,IAjBT,6FAiBN,6GACQC,EAAO,IAAIC,SACf,aADW,cAEJ,EAAQ,QAFJ,MADf,SAKQD,EAAKE,OALb,OAMEC,SAASC,MAAMC,IAAIL,GACbM,EAAYH,SAASI,eAAe,cAC1CxI,EAAauI,EAAUE,WAAW,MARpC,2CAjBM,wBA+BN,SAASC,EAAUvH,GACjBrD,EAAaC,UAAW,EACxBgK,EAAU7G,eAAeC,GACzB5D,OAAOoL,sBAAsBC,GAS/B,SAASC,EAASC,EAAWC,EAAUC,EAAYC,EAAUC,GAC3DJ,EAAUK,UAAYF,EACtBH,EAAUb,KAAOiB,EACjB,IAAME,EAAWN,EAAUO,YAAYN,GACvCD,EAAUQ,SACRP,EACAC,EAAW/I,EAAImJ,EAASxL,MAAQ,EAChCoL,EAAW9I,GACRkJ,EAASG,wBACRH,EAASI,0BACT,GAvCR,eAAS,wCAAC,8FACRxB,IADQ,4CA0CV,IAAMlK,EAAe,eAAS,CAAEC,UAAU,IAC1C,SAAS6K,IACP,IACE,IAAMa,EAAU,IAAItH,KACpBnC,EAAW0J,UAAU,EAAG,EAAG,IAAK,KAChC3B,EAAUV,WAAWoC,GACjB1B,EAAUxI,aACZsJ,EAAS7I,EAAY,IAAKzB,EAAQ,QAAS,eAC3CT,EAAaC,UAAW,GACfgK,EAAUrI,cACnBmJ,EAAS7I,EAAY,IAAKzB,EAAQ,MAAO,eACzCT,EAAaC,UAAW,IAExBgK,EAAUzI,mBAAmBgH,SAAQ,SAACjJ,EAAGoF,GACvC,GAAIpF,EAAE4B,YAAa,CAEjB,IAAM0K,EAAc5B,EAAUR,cAAclK,EAAGoM,GAC/CzJ,EAAWmJ,UAAYpB,EAAU1H,gBAAgBhD,GAA1B,0BACAsM,EADA,+BAEAA,EAFA,KAGvB,IAAMC,EAAc7B,EAAUxD,eAAe9B,EAAOgH,GACpDzJ,EAAW6J,KACT9B,EAAU3C,gBAAgB/H,EAAGuM,EAAaH,IAG5CZ,EACE7I,EADM,UAEH3C,EAAExD,KAAKmF,YACV4K,EAHM,0BAIaD,EAJb,KAKN,uBAINd,EACE7I,EACA+H,EAAUjI,uBACVvB,EACA,QACA,mBAEFsK,EACE7I,EADM,UAEH+H,EAAUP,oBAAoBiC,IACjC,IAAIxE,iBAAiB,GAAI,IACzB,QACA,mBAEF1H,OAAOoL,sBAAsBC,IAE/B,MAAO/B,GACPiD,QAAQjD,MAAMA,IAKlB,SAAShJ,EAAgBkM,GACvBhC,EAAU/E,YAAYhD,EAAY+J,EAAEC,QAASD,EAAEE,SAEjD,IAAMjM,EAAgB,kBAAM0K,EAAU,SAChCzK,EAAkB,kBAAMyK,EAAU,WAClCxK,EAAgB,kBAAMwK,EAAU,SACtC,MAAO,CACL7K,kBACAC,eACAE,gBACAC,kBACAC,mBEvJN,EAAOgM,OAAS,EAED,QHEA,GACbjO,KAAM,MACNkO,WAAY,CACVC,S,UILJ,EAAOF,OAASA,EAED,QCJfG,eAAUC,GAAKC,MAAM,S,uBCHrB3O,EAAOD,QAAU,IAA0B,0B,uBCA3CC,EAAOD,QAAU,IAA0B,2B,gDCA3CC,EAAOD,QAAU,IAA0B,4B,qBCA3CC,EAAOD,QAAU,IAA0B,0B,kCCA3C","file":"js/app.641d4475.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/number-bonds-vue-cli/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"fonts/Lobster-Regular.9406d0ab.ttf\";","<template>\n  <Game />\n</template>\n\n<script>\nimport Game from \"./components/Game.vue\";\n\nexport default {\n  name: \"App\",\n  components: {\n    Game,\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n","<template>\n  <canvas\n    id=\"gameCanvas\"\n    height=\"500\"\n    width=\"500\"\n    @click=\"gameCanvasClick\"\n  ></canvas>\n  <div v-if=\"displayState.controls\">\n    <h2>Start game?</h2>\n    <div><button @click=\"startEasyGame\">Easy</button></div>\n    <div><button @click=\"startMediumGame\">Medium</button></div>\n    <div><button @click=\"startHardGame\">Hard</button></div>\n  </div>\n</template>\n\n<script>\nimport { onMounted, reactive } from \"vue\";\nimport { initialiseGameState } from \"../helpers/gameState\";\n/**\n * Numbers set up by teacher\n *  Qs per round\n *  Operation\n *  Time to answer\n * Music\n * Countdown\n * Farm themed\n * Filling up milk\n * cow kick bucket to help farmer milk cow\n */\nexport default {\n  name: \"Game\",\n  setup() {\n    /**@type {CanvasRenderingContext2D} */\n    let theContext;\n    const centre = new DOMPointReadOnly(250, 250);\n    const soundPop = new Audio(require(\"@/assets/sounds/pop.wav\"));\n    const soundClap = new Audio(require(\"@/assets/sounds/clap.wav\"));\n    const soundError = new Audio(require(\"@/assets/sounds/error.wav\"));\n    const soundBoo = new Audio(require(\"@/assets/sounds/boo.wav\"));\n    const gameState = initialiseGameState(centre, {\n      pop: soundPop,\n      clap: soundClap,\n      error: soundError,\n      boo: soundBoo,\n    });\n    onMounted(async () => {\n      initialise();\n    });\n    async function initialise() {\n      const font = new FontFace(\n        \"CanvasFont\",\n        `url(${require(\"@/assets/fonts/Lobster/Lobster-Regular.ttf\")})`\n      );\n      await font.load();\n      document.fonts.add(font);\n      const theCanvas = document.getElementById(\"gameCanvas\");\n      theContext = theCanvas.getContext(\"2d\");\n    }\n\n    /**\n     * @param {string} difficulty\n     */\n    function startGame(difficulty) {\n      displayState.controls = false;\n      gameState.initialiseGame(difficulty);\n      window.requestAnimationFrame(drawCircles);\n    }\n    /**\n     * @param {CanvasRenderingContext2D} p_Context\n     * @param {string} p_ToShow\n     * @param {DOMPointReadOnly} p_Position\n     * @param {string} p_Colour\n     * @param {string} p_Font\n     */\n    function drawText(p_Context, p_ToShow, p_Position, p_Colour, p_Font) {\n      p_Context.fillStyle = p_Colour;\n      p_Context.font = p_Font;\n      const textSize = p_Context.measureText(p_ToShow);\n      p_Context.fillText(\n        p_ToShow,\n        p_Position.x - textSize.width / 2,\n        p_Position.y +\n          (textSize.actualBoundingBoxAscent +\n            textSize.actualBoundingBoxDescent) /\n            2\n      );\n    }\n    const displayState = reactive({ controls: true });\n    function drawCircles() {\n      try {\n        const timeNow = new Date();\n        theContext.clearRect(0, 0, 500, 500); // clear canvas\n        gameState.onGameTick(timeNow);\n        if (gameState.gameIsWon()) {\n          drawText(theContext, \"✓\", centre, \"green\", \"72px Impact\");\n          displayState.controls = true;\n        } else if (gameState.gameIsLost()) {\n          drawText(theContext, \"✗\", centre, \"red\", \"72px Impact\");\n          displayState.controls = true;\n        } else {\n          gameState.getCirclesToDraw().forEach((p, index) => {\n            if (p.isDisplayed) {\n              //  Circles\n              const circleAlpha = gameState.getPieceAlpha(p, timeNow);\n              theContext.fillStyle = gameState.isPieceSelected(p)\n                ? `rgba(0, 255, 0, ${circleAlpha})`\n                : `rgba(255, 0, 0, ${circleAlpha})`;\n              const pieceCentre = gameState.getPieceCentre(index, timeNow);\n              theContext.fill(\n                gameState.updatePiecePath(p, pieceCentre, timeNow)\n              );\n              //  Numbers\n              drawText(\n                theContext,\n                `${p.data.calcNumber}`,\n                pieceCentre,\n                `rgba(0, 0, 255, ${circleAlpha})`,\n                \"32px CanvasFont\"\n              );\n            }\n          });\n          drawText(\n            theContext,\n            gameState.getCurrentTargetText(),\n            centre,\n            \"black\",\n            \"48px CanvasFont\"\n          );\n          drawText(\n            theContext,\n            `${gameState.getCountdownSeconds(timeNow)}`,\n            new DOMPointReadOnly(30, 30),\n            \"black\",\n            \"32px CanvasFont\"\n          );\n          window.requestAnimationFrame(drawCircles);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    /**@param {MouseEvent} e */\n    function gameCanvasClick(e) {\n      gameState.onGameClick(theContext, e.offsetX, e.offsetY);\n    }\n    const startEasyGame = () => startGame(\"easy\");\n    const startMediumGame = () => startGame(\"medium\");\n    const startHardGame = () => startGame(\"hard\");\n    return {\n      gameCanvasClick,\n      displayState,\n      startEasyGame,\n      startMediumGame,\n      startHardGame,\n    };\n  },\n};\n</script>\n","const fullCircle = 2 * Math.PI;\r\n/**\r\n * @param {DOMPointReadOnly} centre\r\n * @param {{pop: HTMLAudioElement, clap: HTMLAudioElement, error: HTMLAudioElement, boo: HTMLAudioElement}} sounds\r\n */\r\nexport function initialiseGameState(centre, sounds) {\r\n  //  TODO: Split into drawing and game engine functions\r\n  //  TODO: Booing\r\n  //  TODO: \"+5\", \"-2\" text\r\n  //  TODO: Allow win if circles are moving in (delay setting end game until things have finished)\r\n  /**\r\n   * @typedef {{calcNumber: number}} TargetData\r\n   * @typedef {{\r\n   * isDisplayed: boolean,\r\n   * data: TargetData,\r\n   * path:Path2D,\r\n   * popStartTime: Date,\r\n   * popEndTime: Date,\r\n   * playMoveStartTime: Date,\r\n   * playMoveEndTime: Date,\r\n   * isMovingIn: boolean,\r\n   * moveInStartTime: Date,\r\n   * moveInEndTime: Date,\r\n   * isMovingOut: boolean,\r\n   * moveOutStartTime: Date,\r\n   * moveOutEndTime: Date\r\n   * }} PieceData\r\n   * @type {[PieceData]} */\r\n  let circles;\r\n  /** @type {[number]} */\r\n  let dataNumbers;\r\n  let currentLevel = 0;\r\n  const circleRadius = 150;\r\n  const innerCircleRadius = circleRadius / 2;\r\n\r\n  /**\r\n   * @param {number} dataNumber\r\n   * @returns {PieceData}\r\n   */\r\n  const initACircle = (dataNumber) => ({\r\n    data: {\r\n      calcNumber: dataNumber,\r\n    },\r\n    isDisplayed: true,\r\n    path: null,\r\n    popStartTime: null,\r\n    popEndTime: null,\r\n    hasBeenPlayed: false,\r\n  });\r\n\r\n  /**\r\n   * @returns {[PieceData]}\r\n   */\r\n  const getCirclesToDraw = () => circles;\r\n\r\n  /**\r\n   * @returns {boolean}\r\n   */\r\n  function gameIsWon() {\r\n    return gameHasEnded && gameWasWon;\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean}\r\n   */\r\n  function gameIsLost() {\r\n    return gameHasEnded && !gameWasWon;\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean}\r\n   */\r\n  function hasFinishedLastLevel() {\r\n    return currentLevel === dataNumbers.length;\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean}\r\n   */\r\n  const levelIsWon = () => circles.filter((c) => c.isDisplayed).length === 0;\r\n\r\n  /**\r\n   * @returns {string}\r\n   */\r\n  const getCurrentTargetText = () => `${dataNumbers[currentLevel]}`;\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} theContext\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @returns {PieceData}\r\n   */\r\n  const getHitCircle = (theContext, x, y) =>\r\n    circles\r\n      .filter((c) => c.isDisplayed)\r\n      .find((c) => theContext.isPointInPath(c.path, x, y));\r\n\r\n  /**\r\n   * @param {PieceData} p_Piece\r\n   */\r\n  const isPieceSelected = (p_Piece) => p_Piece.isMovingIn;\r\n\r\n  const MAX_TARGET_EASY = 9;\r\n  const MAX_TARGET_MEDIUM = 20;\r\n  const MAX_TARGET_HARD = 1000;\r\n  /**\r\n   * @returns {number}\r\n   */\r\n  function difficultyMax() {\r\n    return forDifficulty(MAX_TARGET_EASY, MAX_TARGET_MEDIUM, MAX_TARGET_HARD);\r\n  }\r\n\r\n  function forDifficulty(easy, medium, hard) {\r\n    switch (currentDifficulty) {\r\n      case \"easy\":\r\n        return easy;\r\n      case \"medium\":\r\n        return medium;\r\n      default:\r\n        return hard;\r\n    }\r\n  }\r\n\r\n  const LEVELS_PER_GAME = 5;\r\n  /** @type {string} */\r\n  let currentDifficulty;\r\n  /**\r\n   * @param {string} difficulty\r\n   */\r\n  function initialiseGame(difficulty) {\r\n    currentDifficulty = difficulty.toLowerCase();\r\n    dataNumbers = [];\r\n    const maxForDifficulty = difficultyMax(difficulty);\r\n    for (let level = 0; level < LEVELS_PER_GAME; level++) {\r\n      const levelTarget = Math.round(Math.random() * maxForDifficulty);\r\n      dataNumbers.push(levelTarget);\r\n    }\r\n    currentLevel = 0;\r\n    gameHasEnded = false;\r\n    initialiseNewLevel(true);\r\n  }\r\n\r\n  const NUMBER_OF_PAIRS = 4;\r\n  /**\r\n   * @param {boolean} p_IsFirstLevel\r\n   */\r\n  function initialiseNewLevel(p_IsFirstLevel) {\r\n    const targetNumber = dataNumbers[currentLevel];\r\n    let currentPair = 0;\r\n    circles = [];\r\n    while (currentPair < NUMBER_OF_PAIRS) {\r\n      const firstNumber = Math.round(Math.random() * targetNumber);\r\n      circles.push(initACircle(firstNumber));\r\n      circles.push(initACircle(targetNumber - firstNumber));\r\n      currentPair++;\r\n    }\r\n    shuffleCircles();\r\n    gameEndTime = addSeconds(\r\n      p_IsFirstLevel ? new Date() : gameEndTime,\r\n      difficultySecondsPerLevel()\r\n    );\r\n  }\r\n\r\n  const SECONDS_PER_LEVEL_EASY = 20;\r\n  const SECONDS_PER_LEVEL_MEDIUM = 15;\r\n  const SECONDS_PER_LEVEL_HARD = 10;\r\n  /**\r\n   * @returns {number}\r\n   */\r\n  function difficultySecondsPerLevel() {\r\n    return forDifficulty(\r\n      SECONDS_PER_LEVEL_EASY,\r\n      SECONDS_PER_LEVEL_MEDIUM,\r\n      SECONDS_PER_LEVEL_HARD\r\n    );\r\n  }\r\n\r\n  function shuffleCircles() {\r\n    const newCircles = [];\r\n    for (let index = circles.length - 1; index >= 0; index--) {\r\n      const indexToRemove = Math.round(Math.random()) * (circles.length - 1);\r\n      newCircles.push(circles[indexToRemove]);\r\n      circles.splice(indexToRemove, 1);\r\n    }\r\n    circles = newCircles;\r\n  }\r\n\r\n  /**\r\n   * @param {Date} p_Now\r\n   * @param {number} p_SecondsToAdd\r\n   * @returns {Date}\r\n   */\r\n  function addSeconds(p_Now, p_SecondsToAdd) {\r\n    const newDate = new Date(p_Now);\r\n    newDate.setSeconds(newDate.getSeconds() + p_SecondsToAdd);\r\n    return newDate;\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} theContext\r\n   * @param {number} x\r\n   * @param {number} y\r\n   */\r\n  function onGameClick(theContext, x, y) {\r\n    const clickedCircle = getHitCircle(theContext, x, y);\r\n    if (clickedCircle) {\r\n      onCircleClicked(clickedCircle);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PieceData} p_Piece\r\n   * @param {Date} p_Now\r\n   */\r\n  function startPopping(p_Piece, p_Now) {\r\n    p_Piece.popStartTime = p_Now;\r\n    p_Piece.popEndTime = addSeconds(p_Now, SECONDS_PER_POP);\r\n  }\r\n\r\n  /**\r\n   * @param {PieceData} p_Piece\r\n   * @param {Date} p_Now\r\n   */\r\n  function startMovingIn(p_Piece, p_Now) {\r\n    p_Piece.isMovingIn = true;\r\n    p_Piece.moveInStartTime = p_Now;\r\n    p_Piece.moveInEndTime = addSeconds(p_Now, SECONDS_PER_SELECT);\r\n  }\r\n\r\n  /**\r\n   * @param {PieceData} p_Piece\r\n   * @param {Date} p_Now\r\n   */\r\n  function startMovingOut(p_Piece, p_Now) {\r\n    p_Piece.isMovingIn = !(p_Piece.isMovingOut = true);\r\n    p_Piece.moveOutStartTime = p_Now;\r\n    p_Piece.moveOutEndTime = addSeconds(p_Now, SECONDS_PER_SELECT);\r\n  }\r\n\r\n  /**\r\n   * @param {PieceData} p_Piece\r\n   */\r\n  function canPlay(p_Piece) {\r\n    //  Cannot be in any selection\r\n    return !selections.some((s) => s.some((p) => p === p_Piece));\r\n  }\r\n\r\n  let currentTurnIndex = 0;\r\n  /**\r\n   * @param {PieceData} p_Piece\r\n   */\r\n  function doPlay(p_Piece) {\r\n    selections[currentTurnIndex].push(p_Piece);\r\n    startMovingIn(p_Piece, new Date());\r\n  }\r\n\r\n  const SELECTIONS_PER_TURN = 2;\r\n  function prepareForNextPlay() {\r\n    if (selections[currentTurnIndex].length == SELECTIONS_PER_TURN) {\r\n      currentTurnIndex = (currentTurnIndex + 1) % NUMBER_OF_PAIRS;\r\n    }\r\n  }\r\n\r\n  /**@type {[[PieceData]]} */\r\n  const selections = [[], [], [], []];\r\n  /**\r\n   * @param {PieceData} hitCircle\r\n   */\r\n  function onCircleClicked(hitCircle) {\r\n    if (canPlay(hitCircle)) {\r\n      doPlay(hitCircle);\r\n      prepareForNextPlay();\r\n    }\r\n  }\r\n\r\n  const SECONDS_PER_SELECT = 1;\r\n  /**\r\n   * @param {PieceData} p_Piece\r\n   * @param {Date} p_Now\r\n   */\r\n  function getPieceRadiusProgressFactor(p_Piece, p_Now) {\r\n    if (p_Piece.isMovingIn) {\r\n      return p_Piece.moveInEndTime < p_Now\r\n        ? 0\r\n        : (p_Piece.moveInEndTime - p_Now) / (SECONDS_PER_SELECT * 1000);\r\n    } else if (p_Piece.isMovingOut) {\r\n      return p_Now > p_Piece.moveOutEndTime\r\n        ? 1\r\n        : (p_Now - p_Piece.moveOutStartTime) / (SECONDS_PER_SELECT * 1000);\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  const SECONDS_PER_SPIN = 10;\r\n  /**\r\n   * @param {number} p_Index\r\n   * @param {Date} p_Now\r\n   * @returns {DOMPointReadOnly}\r\n   */\r\n  function getPieceCentre(p_Index, p_Now) {\r\n    const thePiece = circles[p_Index];\r\n    const progressFactor = getPieceRadiusProgressFactor(thePiece, p_Now);\r\n    const positionRadius =\r\n      innerCircleRadius + (circleRadius - innerCircleRadius) * progressFactor;\r\n    const partCircle =\r\n      fullCircle *\r\n      //  Simple \"How far along is based on it's index\"\r\n      ((p_Index + 1) / circles.length +\r\n        //  Extra bit based on the current time (spinning at the rate of SECONDS_PER_SPIN)\r\n        p_Now / (SECONDS_PER_SPIN * 1_000));\r\n    const circleX = centre.x + positionRadius * Math.sin(partCircle);\r\n    const circleY = centre.y + positionRadius * Math.cos(partCircle);\r\n    return new DOMPointReadOnly(circleX, circleY);\r\n  }\r\n\r\n  const SECONDS_PER_POP = 1;\r\n  /**\r\n   * @param {PieceData} p_Piece\r\n   * @param {Date} p_Now\r\n   */\r\n  function getPieceSize(p_Piece, p_Now) {\r\n    const baseRadius = 50;\r\n    if (p_Piece.popStartTime === null) {\r\n      return baseRadius;\r\n    } else {\r\n      //  y=sin(x+pi)+1\r\n      //  from 0 to 1.5PI(starts at 1, goes to 0, then goes to 2)\r\n      return (\r\n        baseRadius *\r\n        (1 +\r\n          Math.sin(\r\n            //  Proportion gone\r\n            ((p_Now - p_Piece.popStartTime) / (SECONDS_PER_POP * 1000)) *\r\n              //  Range 0 - 1.5PI\r\n              (1.5 * Math.PI) +\r\n              //  Plus PI\r\n              Math.PI\r\n          ))\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PieceData} p_Piece\r\n   * @param {DOMPointReadOnly} p_Centre\r\n   * @param {Date} p_Now\r\n   */\r\n  function updatePiecePath(p_Piece, p_Centre, p_Now) {\r\n    const radius = getPieceSize(p_Piece, p_Now);\r\n    const path = new Path2D();\r\n    //  Save the path for collision detection\r\n    path.arc(p_Centre.x, p_Centre.y, radius, 0, fullCircle);\r\n    return (p_Piece.path = path);\r\n  }\r\n\r\n  const SECONDS_PER_SUCCESS_EASY = 5;\r\n  const SECONDS_PER_SUCCESS_MEDIUM = 3;\r\n  const SECONDS_PER_SUCCESS_HARD = 2;\r\n  /**\r\n   * @returns {number}\r\n   */\r\n  function difficultySecondsPerSuccess() {\r\n    return forDifficulty(\r\n      SECONDS_PER_SUCCESS_EASY,\r\n      SECONDS_PER_SUCCESS_MEDIUM,\r\n      SECONDS_PER_SUCCESS_HARD\r\n    );\r\n  }\r\n\r\n  const SECONDS_PER_ERROR_EASY = 2;\r\n  const SECONDS_PER_ERROR_MEDIUM = 2;\r\n  const SECONDS_PER_ERROR_HARD = 2;\r\n  /**\r\n   * @returns {number}\r\n   */\r\n  function difficultySecondsPerError() {\r\n    return forDifficulty(\r\n      SECONDS_PER_ERROR_EASY,\r\n      SECONDS_PER_ERROR_MEDIUM,\r\n      SECONDS_PER_ERROR_HARD\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {[PieceData]} p_Selection\r\n   * @param {Date} p_Now\r\n   */\r\n  function onTurnFinished(p_Selection, p_Now) {\r\n    const selectedTotal = p_Selection.reduce(\r\n      (v, c) => v + c.data.calcNumber,\r\n      0\r\n    );\r\n    if (selectedTotal === dataNumbers[currentLevel]) {\r\n      p_Selection.forEach((p) => startPopping(p, p_Now));\r\n      new Promise((resolve) =>\r\n        setTimeout(resolve, (SECONDS_PER_POP * 1000) / 3)\r\n      ).then(() => sounds.pop.play());\r\n      gameEndTime = addSeconds(gameEndTime, difficultySecondsPerSuccess());\r\n    } else {\r\n      p_Selection.forEach((p) => startMovingOut(p, p_Now));\r\n      sounds.error.play();\r\n      //  Time off.\r\n      gameEndTime = addSeconds(gameEndTime, -difficultySecondsPerError());\r\n    }\r\n    p_Selection.length = 0;\r\n  }\r\n\r\n  /**\r\n   * @param {[PieceData]} p_Selection\r\n   * @param {Date} p_Now\r\n   */\r\n  function checkForTurnWon(p_Selection, p_Now) {\r\n    //  If the play is active\r\n    if (p_Selection.length === SELECTIONS_PER_TURN) {\r\n      //  If they have all finished moving in (turn is over)\r\n      if (p_Selection.every((p) => p.moveInEndTime < p_Now)) {\r\n        onTurnFinished(p_Selection, p_Now);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Date} p_Now\r\n   */\r\n  function checkAllForTurnWon(p_Now) {\r\n    selections.forEach((s) => checkForTurnWon(s, p_Now));\r\n  }\r\n\r\n  function endGame(p_HasWon) {\r\n    if (p_HasWon) {\r\n      sounds.clap.play();\r\n    } else {\r\n      sounds.boo.play();\r\n    }\r\n    gameHasEnded = true;\r\n    gameWasWon = p_HasWon;\r\n  }\r\n\r\n  /** @type {boolean} */\r\n  let gameHasEnded;\r\n  /** @type {boolean} */\r\n  let gameWasWon;\r\n  /**\r\n   * @param {Date} p_Now\r\n   */\r\n  function onGameTick(p_Now) {\r\n    if (!gameHasEnded) {\r\n      checkAllForTurnWon(p_Now);\r\n      if (levelIsWon()) {\r\n        currentLevel++;\r\n        if (hasFinishedLastLevel()) {\r\n          sounds.clap.play();\r\n          endGame(true);\r\n        } else {\r\n          initialiseNewLevel(false);\r\n        }\r\n      } else if (gameIsOver(p_Now)) {\r\n        endGame(false);\r\n      }\r\n      circles.forEach((c) => {\r\n        if (c.popStartTime !== null) {\r\n          c.isDisplayed = p_Now < c.popEndTime;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PieceData} p_Piece\r\n   * @param {Date} p_Now\r\n   */\r\n  function getPieceAlpha(p_Piece, p_Now) {\r\n    if (p_Piece.popStartTime !== null) {\r\n      //  Popping.\r\n      return (p_Now - p_Piece.popStartTime) / (SECONDS_PER_POP * 1000);\r\n    } else {\r\n      //  Not popping.\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  /**@type {Date} gameEndTime */\r\n  let gameEndTime;\r\n  /**\r\n   * @param {Date} p_Now\r\n   */\r\n  function getCountdownSeconds(p_Now) {\r\n    return Math.round((gameEndTime - p_Now) / 1000);\r\n  }\r\n\r\n  /**\r\n   * @param {Date} p_Now\r\n   */\r\n  function gameIsOver(p_Now) {\r\n    return p_Now > gameEndTime;\r\n  }\r\n\r\n  return {\r\n    initialiseGame,\r\n    initialiseNewLevel,\r\n    getCirclesToDraw,\r\n    gameIsWon,\r\n    gameIsLost,\r\n    onGameClick,\r\n    getCurrentTargetText,\r\n    isPieceSelected,\r\n    getPieceCentre,\r\n    updatePiecePath,\r\n    onGameTick,\r\n    getPieceAlpha,\r\n    getCountdownSeconds,\r\n  };\r\n}\r\n","import { render } from \"./Game.vue?vue&type=template&id=013e7e1c\"\nimport script from \"./Game.vue?vue&type=script&lang=js\"\nexport * from \"./Game.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=6a777826\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=6a777826&lang=css\"\nscript.render = render\n\nexport default script","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","module.exports = __webpack_public_path__ + \"media/boo.0015b906.wav\";","module.exports = __webpack_public_path__ + \"media/clap.5ab15649.wav\";","module.exports = __webpack_public_path__ + \"media/error.35f9935b.wav\";","module.exports = __webpack_public_path__ + \"media/pop.d8e85178.wav\";","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=6a777826&lang=css\""],"sourceRoot":""}